<?xml version="1.0"?>
<!--
/*
 * Aloha Open Source SIP Application Server- https://trac.osmosoft.com/Aloha
 *
 * Copyright (c) 2008, British Telecommunications plc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free Software
 * Foundation; either version 3.0 of the License, or (at your option) any later
 * version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with this library; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
 -->
<project name="Mockphones" default="all">
	<record name="${basedir}/build.log" loglevel="verbose" />
	<property file="properties/${user.name}.properties" />
	<property file="properties/build.properties" />	
	
	<property name="src" value="src" />
	<property name="build" value="build" />
	<property name="dist" value="dist" />
	<property name="etc" value="etc" />
	<property name="lib" value="lib" />	
	<property name="test" value="${src}/test" />	
	
	<path id="project.classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="project.classpath" resource="tasks.properties" />	

	<target name="all" depends="clean,dep,compile,test,jar,dist,package" />
	
	<dirname property="pwd" file="${ant.file}" />
	<property name="coverage.file" value="${pwd}/${build}/coverage/cobertura.ser" />
	
	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="clean,dep">
		<mkdir dir="${build}" />
		<javac includes="**/*.java" debug="${build.debug}" destdir="${build}">
			<src path="${src}" />
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="instrument" depends="compile">
		<property name="instrumentExcludes" value="**/*Test*,**/*Fixture*,**/testing/**" />
		<mkdir dir="${build}/coverage" />
		<cobertura-instrument todir="${build}/coverage/classes" datafile="${coverage.file}">
			<fileset dir="${build}" excludes="${instrumentExcludes}">
				<include name="**/*.class" />
			</fileset>
			<classpath>
				<path refid="project.classpath" />
			</classpath>
		</cobertura-instrument>
	</target>	
	
	<target name="test" depends="instrument">
		<taskdef classpathref="project.classpath" resource="tasks.properties" />
		<mkdir dir="${build}/test" />
		<dirname property="pwd" file="${ant.file}" />
		<junit printsummary="yes" errorproperty="test.fail" failureproperty="test.fail" fork="yes" showoutput="yes">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${coverage.file}" />
			<sysproperty key="junit.build.dir" value="${pwd}" />
			<formatter type="xml" />
			<batchtest todir="${build}/test">
				<fileset dir="${test}" includes="**/*Test.java"/>
			</batchtest>
			<classpath>
				<pathelement location="${build}/coverage/classes" />
				<pathelement location="${build}" />
				<path refid="project.classpath" />
				<pathelement location="${etc}" />
				<pathelement location="${src}/java" />
			</classpath>
		</junit>
		<mkdir dir="${build}/test/html" />
		<junitreport todir="${build}/test">
			<fileset dir="${build}/test">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${build}/test/html" />
		</junitreport>
		<cobertura-report destdir="${build}/coverage/xml" datafile="${coverage.file}" format="xml">
			<fileset dir="${src}/java" />
			<classpath refid="project.classpath" />
		</cobertura-report>
		<cobertura-report datafile="${coverage.file}" destdir="${build}/coverage/html">
			<fileset dir="${src}/java" />
			<classpath refid="project.classpath" />
		</cobertura-report>
		<fail if="test.fail" message="Tests failed, see reports for details" />
	</target>
	
	
	<target name="jar" depends="compile, test">
		<copy todir="${build}">
			<fileset dir="${etc}">
				<include name="*" />
			</fileset>
		</copy>
		<copy todir="${build}" file="${src}/java/applicationContext.xml" />
		
		<jar destfile="${build}/${ant.project.name}.jar" basedir="${build}" excludes="**/*Test.class, **/coverage/**, **/test/**">
			<manifest>
				<attribute name="Main-Class" value="com.bt.aloha.mockphones.Main" />
				<attribute name="Class-Path" value="
					lib/SimpleSipStack.jar
					lib/commons-dbcp-1.2.1.jar
					lib/commons-logging-1.1.jar
					lib/commons-pool-1.3.jar
					lib/concurrent-1.3.3.jar
					lib/jain-sip-api-1.2.jar
					lib/jain-sip-ri-1.2.jar
					lib/jmf.jar
					lib/log4j-1.2.14.jar
					lib/nist-sdp-1.0.jar
					lib/pe-sdk-common.jar
					lib/spring-2.0.5.jar
					lib/spring-aspects-2.0.5.jar
					lib/spring-mock-2.0.5.jar" />
			</manifest>
		</jar>
	</target>

	<target name="dist">
		<mkdir dir="${dist}" />
		<copy todir="${dist}" file="${build}/${ant.project.name}.jar" />
	</target>
	
	<target name="dep" description="Update dependencies">
		<copy overwrite="true" todir="${lib}">
			<fileset file="${sipStackProject}/dist/SimpleSipStack.jar"/>
			<!--fileset file="${commonProject}/dist/pe-sdk-common.jar"/-->			
		</copy>
	</target>
	
	<target name="run" depends="jar">
		<java fork="yes" classname="com.bt.aloha.mockphones.Main" >
			<classpath>
				<pathelement location="${build}/${ant.project.name}.jar"/>
				<pathelement location="${src}/java"/>			
				<pathelement location="${etc}"/>
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>
	
	<target name="run.database" depends="jar">
		<java fork="yes" classname="com.bt.aloha.mockphones.Main" >
			<arg value="database" />
			<classpath>
				<pathelement location="${build}/${ant.project.name}.jar"/>
				<pathelement location="${src}/java"/>			
				<pathelement location="${etc}"/>
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>
	
	<target name="package" depends="jar">
		<mkdir dir="${build}/mockphones/" />
		<mkdir dir="${build}/mockphones/lib" />

		<copy todir="${build}/mockphones/lib">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${build}/mockphones" file="${build}/${ant.project.name}.jar" />

		<mkdir dir="${dist}" />
		<zip destfile="${dist}/${ant.project.name}.zip" basedir="${build}/mockphones" />
	</target>

</project>