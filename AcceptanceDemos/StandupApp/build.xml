<!--
/*
 * Aloha Open Source SIP Application Server- https://trac.osmosoft.com/Aloha
 *
 * Copyright (c) 2008, British Telecommunications plc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free Software
 * Foundation; either version 3.0 of the License, or (at your option) any later
 * version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with this library; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
 -->
<project name="StandupApp" default="all">
	<property file="properties/${user.name}.properties" />
	<property file="properties/build.properties" />
	<property file="participants.properties" />

	<property name="src.main" value="src/main" />
	<property name="src.test" value="src/test" />
	<property name="src.resources" value="src/resources" />
	<property name="build" value="build" />
	<property name="dist" value="dist" />
	<property name="etc" value="etc" />
	<property name="lib" value="lib" />
    <property name="unittest.base" value="${pe-build.home}/unittest"/>
	<property name="build.logfile" value="${basedir}/standupapp.log"/>

	<import file="${unittest.base}/build.xml" />

	<path id="project.classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="all" depends="clean, copyDependencies, compile, test, jar, dist, run" />

	<target name="clean">
		<delete dir="${build.report.reports}" />
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete file="${build.logfile}"/>
	</target>

	<target name="copyDependencies" depends="clean">
		<copy overwrite="true" failonerror="false"
			tofile="${lib}/SimpleSipStack.jar"
			file="${fitnesse.home}/FitNesseRoot/CallControl/lib/testapp/SimpleSipStack.jar" />
		<copy overwrite="true" failonerror="false"
			tofile="${lib}/ConvediaMediaBeans.jar"
			file="${fitnesse.home}/FitNesseRoot/CallControl/lib/testapp/ConvediaMediaBeans.jar" />
	</target>

	<target name="compile" depends="copyDependencies">
		<mkdir dir="${build}/classes/main" />
		<javac includes="**/*.java" debug="true" destdir="${build}/classes/main">
			<src path="${src.main}/java" />
			<classpath refid="project.classpath" />
		</javac>
		<mkdir dir="${build}/classes/test" />
		<javac includes="**/*.java" debug="true" destdir="${build}/classes/test">
			<src path="${src.test}/java" />
			<classpath>
				<path refid="project.classpath" />
				<pathelement location="${build}/classes/main"/>
			</classpath>
		</javac>
		<copy todir="${build}/classes/test">
			<fileset dir="${src.test}/java" excludes="**/*.java" />
		</copy>
	</target>

	<target name="test" depends="compile">
		<antcall target="unit.test"/>
	</target>

	<target name="jar" depends="compile">
		<copy todir="${build}/classes/main">
			<fileset dir="${src.resources}">
				<include name="*.xml" />
				<include name="*.properties" />
			</fileset>
		</copy>
		<jar destfile="${build}/${ant.project.name}.jar" basedir="${build}/classes/main"/>
	</target>

	<target name="dist" depends="jar">
		<mkdir dir="${dist}" />
		<copy todir="${dist}" file="${build}/${ant.project.name}.jar" />
	</target>

	<target name="run" depends="dist">
		<java fork="yes" classname="com.bt.sdk.callcontrol.demo.standup.Main">
			<classpath>
				<pathelement location="${build}/classes/main"/>
				<pathelement location="${src.resources}"/>
				<path refid="project.classpath" />
			</classpath>
			<arg value="${participants}" />
		</java>
	</target>

	<target name="run.test" depends="dist">
		<java fork="yes" classname="com.bt.sdk.callcontrol.demo.standup.Main">
			<classpath>
				<pathelement location="${build}/classes/main"/>
				<pathelement location="${src.resources}"/>
				<path refid="project.classpath" />
			</classpath>
			<arg value="${test.participants}" />
		</java>
	</target>

</project>
